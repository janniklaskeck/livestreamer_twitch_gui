apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

archivesBaseName = "LSGUI"
mainClassName = "app.lsgui.Main"
sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Main-Class': 'app.lsgui.Main'
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
}

dependencies {
    compile  'org.apache.logging.log4j:log4j-api:2.5'
    compile  'org.apache.logging.log4j:log4j-core:2.5'
    compile  'de.jensd:fontawesomefx:8.9'
    compile  'org.controlsfx:controlsfx:8.40.10'
    compile  'com.google.code.gson:gson:2.6.2'
    compile  'org.apache.httpcomponents:httpclient:4.5.1'
    compile  'org.slf4j:slf4j-api:1.7.19'
    compile  'org.apache.logging.log4j:log4j-slf4j-impl:2.5'
    compile  'org.apache.logging.log4j:log4j-jul:2.5'
    compile  'junit:junit:4.12'
    compile  'org.pircbotx:pircbotx:2.1'
    compile  'org.fxmisc.richtext:richtextfx:0.6.10'
    compile  'org.jfxtras:jfxtras-common:8.0-r4'
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
    project {
        buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
        natures += ['org.eclipse.buildship.core.gradleprojectnature']
    }
    classpath {
        downloadSources = true
        downloadJavadoc = true
        file {
            whenMerged { classpath ->
                classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = true
                classpath.entries.removeAll { entry -> entry.kind == 'lib' }
                withXml { classpathXml ->
                    def classpathXmlNode = classpathXml.asNode()
                    classpathXmlNode.appendNode('classpathentry', [kind: 'src', path: 'src'])
                        .appendNode('attributes')
                        .appendNode('attribute', [key: 'FROM_GRADLE_MODEL', value: 'true'])
                    classpathXmlNode.appendNode('classpathentry',  [exported: 'true', kind: 'con', path: 'org.eclipse.buildship.core.gradleclasspathcontainer'])
                }
            }
        }
    }
}

